# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-15 21:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Federation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('acronym', models.CharField(max_length=30)),
                ('website', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Gym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('website', models.URLField()),
                ('description', models.TextField()),
                ('street_address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Lifter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('short_title', models.CharField(max_length=200)),
                ('detailed_content', models.TextField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='JoinGymRequest',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='people.Notification')),
            ],
            bases=('people.notification',),
        ),
        migrations.AddField(
            model_name='notification',
            name='related_users',
            field=models.ManyToManyField(related_name='notifications', to='people.Lifter'),
        ),
        migrations.AddField(
            model_name='gym',
            name='lifters',
            field=models.ManyToManyField(related_name='associated_gyms', to='people.Lifter'),
        ),
        migrations.AddField(
            model_name='gym',
            name='owners',
            field=models.ManyToManyField(related_name='owned_gyms', to='people.Lifter'),
        ),
        migrations.AddField(
            model_name='federation',
            name='lifters',
            field=models.ManyToManyField(related_name='competitive_federations', to='people.Lifter'),
        ),
        migrations.AddField(
            model_name='federation',
            name='owners',
            field=models.ManyToManyField(related_name='owned_federations', to='people.Lifter'),
        ),
        migrations.AddField(
            model_name='joingymrequest',
            name='gym',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Gym'),
        ),
        migrations.AddField(
            model_name='joingymrequest',
            name='initiating_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Lifter'),
        ),
    ]
